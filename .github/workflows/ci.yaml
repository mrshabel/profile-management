name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
            - production

jobs:
    build:
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            # login to dockerhub
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_TOKEN}}

            # enhance image building performance
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{secrets.DOCKERHUB_USERNAME}}/profile-management:latest
                  # cache image layers to optimize performance
                  cache-from: type=ga
                  cache-to: type=gha, mode=max

    deploy:
        runs-on: ubuntu-latest
        environment: production
        needs:
            - build

        steps:
            - name: Connect to remote SSH host
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{secrets.SSH_HOST}}
                  username: ${{secrets.SSH_USER}}
                  key: ${{secrets.SSH_KEY}}

                  script: |
                      whoami
                      sudo su mrshabel -c '
                      cd ~/profile-management
                      echo ${{secrets.SSH_USER_PASSWORD}} | sudo -S docker compose -f docker-compose.prod.yaml up logs
                      echo "Container rebuild successful"
                      '

    # deploy:
    #     runs-on: ubuntu-latest
    #     environment: production
    #     needs:
    #         - build

    #     steps:
    #         - name: Create SSH key
    #           # define env to allow copying contents of the secrets to a new file
    #           env:
    #               SSH_KEY: ${{secrets.SSH_KEY}}
    #           shell: bash
    #           run: |
    #               mkdir -p ~/.ssh/
    #               echo "$SSH_KEY" > ~/.ssh/id_rsa
    #               chmod 600 ~/.ssh/id_rsa
    #               ssh-keyscan -H ${{secrets.SSH_HOST}} >> ~/.ssh/known_hosts

    #         - name: Connect to Remote host
    #           run: |
    #               ssh -v -i ~/.ssh/id_rsa ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}
    #               echo "SSH connection successful"

    #         - name: Checkout directory
    #           run: |
    #               echo ${{secrets.SSH_USER_PASSWORD}} | su - mrshabel
    #               cd ~/profile-management

    #         - name: Rebuild Container
    #           run: |
    #               echo ${{secrets.SSH_USER_PASSWORD}} | sudo -S docker compose -f docker-compose.prod.yaml up
